# The following two (four? TODO) rules are meant to be at the same state
# at all times (activated or deactivated).
#
# Turn the pump off when there is no water
- id: pump_off_when_water_exhausted
  alias: pump_off_when_water_exhausted
  trigger:
    - platform: state
      entity_id: binary_sensor.well
      to: "off"
  action:
    - service: switch.turn_off
      entity_id: switch.pump
# Turn the pump back on when water comes back.
- id: pump_on_when_water_comes
  alias: pump_on_when_water_comes
  trigger:
    - platform: state
      entity_id: binary_sensor.well
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.pump_desired_state
      state: "on"
  action:
    - service: switch.turn_on
      entity_id: switch.pump

# Watch the "pump_desired_state" input.
# TODO if automation is disabled, the "pump" state must mimic pump_desired_state,
# it must not depend on the well state
- id: pump_off_when_desired_off
  alias: pump_off_when_desired_off
  initial_state: on
  trigger:
    - platform: state
      entity_id: input_boolean.pump_desired_state
      to: "off"
  action:
    - service: switch.turn_off
      entity_id: switch.pump
- id: pump_on_when_desired_on
  alias: pump_on_when_desired_on
  initial_state: on
  trigger:
    - platform: state
      entity_id: input_boolean.pump_desired_state
      to: "on"
  condition:
    # If (automation.pump_off_when_water_exhausted == on and well == on) or
    # automation.pump_off_when_water_exhausted == off .
    condition: or
    conditions:
      - condition: and
        conditions:
          - condition: state
            entity_id: group.automation_pump_off_when_no_water
            state: "on"
          - condition: state
            entity_id: binary_sensor.well
            state: "on"
      - condition: state
        entity_id: group.automation_pump_off_when_no_water
        state: "off"
  action:
    - service: switch.turn_on
      entity_id: switch.pump

# Switch the pump on or off when automation gets turned on or off.
#
# Match the desired state when automation gets turned off.
- id: pump_off_when_automation_off
  alias: pump_off_when_automation_off
  initial_state: on
  trigger:
    - platform: state
      entity_id: group.automation_pump_off_when_no_water
      to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.pump_desired_state
      state: "off"
  action:
    - service: switch.turn_off
      entity_id: switch.pump
- id: pump_on_when_automation_off
  alias: pump_on_when_automation_off
  initial_state: on
  trigger:
    - platform: state
      entity_id: group.automation_pump_off_when_no_water
      to: "off"
  condition:
    - condition: state
      entity_id: input_boolean.pump_desired_state
      state: "on"
  action:
    - service: switch.turn_on
      entity_id: switch.pump
- id: pump_off_when_automation_on
  alias: pump_off_when_automation_on
  initial_state: on
  trigger:
    - platform: state
      entity_id: group.automation_pump_off_when_no_water
      to: "on"
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_boolean.pump_desired_state
        state: "off"
      - condition: state
        entity_id: binary_sensor.well
        state: "off"
  action:
    - service: switch.turn_off
      entity_id: switch.pump
- id: pump_on_when_automation_on
  alias: pump_on_when_automation_on
  initial_state: on
  trigger:
    - platform: state
      entity_id: group.automation_pump_off_when_no_water
      to: "on"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.pump_desired_state
        state: "on"
      - condition: state
        entity_id: binary_sensor.well
        state: "on"
  action:
    - service: switch.turn_on
      entity_id: switch.pump
