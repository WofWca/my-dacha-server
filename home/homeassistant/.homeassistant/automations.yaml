# Pump automation
#
# Truth table.
#
# Aut = Turn off the pump when there is not water in the well,
# turn it back on when it comes back automation enabled/disabled.
# Wel = Water present in the well
# Des = Pump desired state
# Brk = Whether the pump is on its break
# Pum = Pump actual state
#
# Brk Aut Wel Des Pum
# 0   0   0   0   0
# 0   0   0   1   1
# 0   0   1   0   0
# 0   0   1   1   1
# 0   1   0   0   0
# 0   1   0   1   0
# 0   1   1   0   0
# 0   1   1   1   1
# 1   0   0   0   0
# 1   0   0   1   0
# 1   0   1   0   0
# 1   0   1   1   0
# 1   1   0   0   0
# 1   1   0   1   0
# 1   1   1   0   0
# 1   1   1   1   0
#
# Pum = Des * !Brk * (Wel + !Aut)
- id: pump
  alias: pump
  initial_state: on
  hide_entity: true
  trigger:
    # Aut
    - platform: state
      entity_id: input_boolean.automation_pump_off_when_no_water
    # Wel
    - platform: state
      entity_id: binary_sensor.well
    # Des
    - platform: state
      entity_id: input_boolean.pump_desired_state
    # Brk
    - platform: state
      entity_id: timer.pump_break
    - platform: homeassistant
      event: start
  action:
    - service_template:
        "switch.\
        {%
          if
            is_state('input_boolean.pump_desired_state', 'on')
            and
            not is_state('timer.pump_break', 'active')
            and (
              is_state('binary_sensor.well', 'on')
              or
              not is_state('input_boolean.automation_pump_off_when_no_water', 'on')
            )
        %}\
          turn_on\
        {% else %}\
          turn_off\
        {% endif %}"
      entity_id: switch.pump


# Sonoff power state sync (https://github.com/arendst/Sonoff-Tasmota/wiki/Home-Assistant#tip-sync-power-state)
- alias: "Sonoff power state on HA start-up"
  hide_entity: true
  trigger:
    platform: homeassistant
    event: start
  action:
    - service: mqtt.publish
      data:
        topic: "sonoffs/cmnd/state"
        payload: ""

- id: set_pump_break_timer_on_pump_off
  alias: Set the pump break timer
  hide_entity: true
  initial_state: on
  action:
    service: timer.start
    data_template:
      entity_id: timer.pump_break
      duration: "{{ (float(states.input_number.pump_break_duration.state) * 60) | int }}" # Int seconds
  trigger:
    platform: state
    entity_id: switch.pump
    to: 'off'

- id: reset_pump_break_timer_on_user_actions
  alias: Reset the pump break timer when the user interacts with it
  initial_state: on
  action:
    service: timer.finish
    data:
      entity_id: timer.pump_break
  trigger:
    - platform: state
      entity_id: input_boolean.pump_desired_state
    - platform: state
      entity_id: input_boolean.automation_pump_off_when_no_water
    - platform: state
      entity_id: input_number.pump_break_duration
